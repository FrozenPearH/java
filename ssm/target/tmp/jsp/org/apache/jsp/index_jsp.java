/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.15.v20190215
 * Generated at: 2019-07-20 06:14:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/D:/warehouse/maven/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1562673826000L));
    _jspx_dependants.put("jar:file:/D:/warehouse/maven/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>员工列表</title>\r\n");
      out.write("    ");

        pageContext.setAttribute("APP_PATH",request.getContextPath());
    
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/jquery-3.4.1/jquery-3.4.1/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/bootstrap-3.3.7-dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/bootstrap-3.3.7-dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 员工添加的模态框 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"empAddModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("                <h4 class=\"modal-title\" id=\"myModalLabel\">员工添加</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <form class=\"form-horizontal\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">empName</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <input type=\"text\" name=\"empName\" class=\"form-control\" id=\"empName_add_input\" placeholder=\"empName\">\r\n");
      out.write("                            <span class=\"help-block\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">email</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <input type=\"text\" name=\"email\" class=\"form-control\" id=\"email_add_input\" placeholder=\"email@hand.com\">\r\n");
      out.write("                            <span class=\"help-block\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">gender</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender1_add_input\" value=\"M\" checked=\"checked\"> 男\r\n");
      out.write("                            </label>\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender2_add_input\" value=\"F\"> 女\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">deptName</label>\r\n");
      out.write("                        <div class=\"col-sm-4\">\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            <select class=\"form-control\" name=\"dId\" id=\"dept_add_select\">\r\n");
      out.write("\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"emp_save_btn\">保存</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"row\"></div>\r\n");
      out.write("    <div class=\"col-md-12\">\r\n");
      out.write("        <h1>SSM-CRUD</h1>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-4 col-md-offset-8\">\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-primary\" id=\"emp_add_modal_btn\">新增</button>\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-danger\">删除</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("            <table class=\"table table-hover\" id=\"emps_table\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>#</th>\r\n");
      out.write("                        <th>empName</th>\r\n");
      out.write("                        <th>gender</th>\r\n");
      out.write("                        <th>email</th>\r\n");
      out.write("                        <th>deptName</th>\r\n");
      out.write("                        <th>操作</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        <div class=\"col-md-6\" id=\"page_info_area\">\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        <div class=\"col-md-6\" id=\"page_nav_area\">\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("    var totalRecore;\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    $(function () {\r\n");
      out.write("        //去首页\r\n");
      out.write("        to_page(1);\r\n");
      out.write("    });\r\n");
      out.write("    function to_page(pn) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/emps\",\r\n");
      out.write("            data:\"pn=\"+pn,\r\n");
      out.write("            type:\"GET\",\r\n");
      out.write("            success:function(result) {\r\n");
      out.write("                // console.log(result);\r\n");
      out.write("                //    1、在页面解析并显示员工数据\r\n");
      out.write("                build_emps_table(result);\r\n");
      out.write("                //    2、解析并显示分页信息\r\n");
      out.write("                build_page_info(result);\r\n");
      out.write("                //3、解析显示分页条数据\r\n");
      out.write("                build_page_nav(result);\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    function build_emps_table(result) {\r\n");
      out.write("        //清空table表格\r\n");
      out.write("        $(\"#emps_table tbody\").empty();\r\n");
      out.write("        //生成表格\r\n");
      out.write("        var emps = result.extend.pageInfo.list;\r\n");
      out.write("        $.each(emps,function (index,item) {\r\n");
      out.write("            // alert(item.empName);\r\n");
      out.write("            var empIdTd = $(\"<td></td>\").append(item.empId);\r\n");
      out.write("            var empNameTd = $(\"<td></td>\").append(item.empName);\r\n");
      out.write("            var genderTd = $(\"<td></td>\").append(item.gender==\"M\"?\"男\":\"女\");\r\n");
      out.write("            var emailTd = $(\"<td></td>\").append(item.email);\r\n");
      out.write("            var departmentTd = $(\"<td></td>\").append(item.department.deptName);\r\n");
      out.write("            var editBtn = $(\"<button></button>\").addClass(\"btn btn-primary btn-sm\")\r\n");
      out.write("                .append($(\"<span></span>\").addClass(\"glyphicon glyphicon-pencil\")).append(\"编辑\");\r\n");
      out.write("            var delBtn = $(\"<button></button>\").addClass(\"btn btn-danger btn-sm\")\r\n");
      out.write("                .append($(\"<span></span>\").addClass(\"glyphicon glyphicon-trash\")).append(\"删除\");\r\n");
      out.write("            var btnTd = $(\"<td></td>\").append(editBtn).append(\" \").append(delBtn)\r\n");
      out.write("            //因为append方法返回执行完成后返回的还是原来的元素\r\n");
      out.write("            $(\"<tr></tr>\").append(empIdTd)\r\n");
      out.write("                .append(empNameTd)\r\n");
      out.write("                .append(genderTd)\r\n");
      out.write("                .append(emailTd)\r\n");
      out.write("                .append(departmentTd)\r\n");
      out.write("                .append(btnTd)\r\n");
      out.write("                .appendTo(\"#emps_table tbody\");\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    //解析显示分页信息\r\n");
      out.write("    function build_page_info(result) {\r\n");
      out.write("        //清空分页信息\r\n");
      out.write("        $(\"#page_info_area\").empty();\r\n");
      out.write("        //生成分页信息\r\n");
      out.write("        $(\"#page_info_area\").append(\"当前第\"+result.extend.pageInfo.pageNum+\"页,总\"+result.extend.pageInfo.pages+\"页,总共\"+result.extend.pageInfo.total+\"条记录\");\r\n");
      out.write("        totalRecore = result.extend.pageInfo.total;\r\n");
      out.write("    }\r\n");
      out.write("    //解析显示分页条\r\n");
      out.write("    function build_page_nav(result){\r\n");
      out.write("        $(\"#page_nav_area\").empty();\r\n");
      out.write("        var ul = $(\"<ul></ul>\").addClass(\"pagination\");\r\n");
      out.write("        var firstPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"首页\").attr(\"href\",\"#\"));\r\n");
      out.write("        var prePageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"&laquo;\"));\r\n");
      out.write("        if (result.extend.pageInfo.hasPreviousPage==false){\r\n");
      out.write("            firstPageLi.addClass(\"disabled\");\r\n");
      out.write("            prePageLi.addClass(\"disabled\");\r\n");
      out.write("        }else{\r\n");
      out.write("            firstPageLi.click(function () {\r\n");
      out.write("                to_page(1);\r\n");
      out.write("            });\r\n");
      out.write("            prePageLi.click(function () {\r\n");
      out.write("                to_page(result.extend.pageInfo.pageNum-1);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var nextPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"&raquo;\"));\r\n");
      out.write("        var lastPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"末页\").attr(\"href\",\"#\"));\r\n");
      out.write("        if (result.extend.pageInfo.hasNextPage==false){\r\n");
      out.write("            nextPageLi.addClass(\"disabled\");\r\n");
      out.write("            lastPageLi.addClass(\"disabled\");\r\n");
      out.write("        }else{\r\n");
      out.write("            nextPageLi.click(function () {\r\n");
      out.write("                to_page(result.extend.pageInfo.pageNum+1);\r\n");
      out.write("            });\r\n");
      out.write("            lastPageLi.click(function () {\r\n");
      out.write("                to_page(result.extend.pageInfo.pages);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul.append(firstPageLi).append(prePageLi);\r\n");
      out.write("        $.each(result.extend.pageInfo.navigatepageNums,function (index,item) {\r\n");
      out.write("            var numLi = $(\"<li></li>\").append($(\"<a></a>\").append(item));\r\n");
      out.write("            if (result.extend.pageInfo.pageNum==item){\r\n");
      out.write("                numLi.addClass(\"active\");\r\n");
      out.write("            }\r\n");
      out.write("            numLi.click(function () {\r\n");
      out.write("                to_page(item);\r\n");
      out.write("            })\r\n");
      out.write("            ul.append(numLi);\r\n");
      out.write("        })\r\n");
      out.write("        ul.append(nextPageLi).append(lastPageLi);\r\n");
      out.write("        var navEle = $(\"<nav></nav>\").append(ul);\r\n");
      out.write("        navEle.appendTo(\"#page_nav_area\");\r\n");
      out.write("    }\r\n");
      out.write("    //点击新增，弹出模块框\r\n");
      out.write("    $(\"#emp_add_modal_btn\").click(function () {\r\n");
      out.write("        //发出ajax请求，查出部门信息，显示在下拉列表中\r\n");
      out.write("        getDepts();\r\n");
      out.write("        $(\"#empAddModal\").modal({\r\n");
      out.write("            backdrop:\"static\"\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("//    查出部门信息，显示在下拉列表中\r\n");
      out.write("    function getDepts() {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/depts\",\r\n");
      out.write("            type:\"GET\",\r\n");
      out.write("            success:function (result) {\r\n");
      out.write("                // console.log(result);\r\n");
      out.write("            //    {\"code\":100,\"msg\":\"处理成功！\",\r\n");
      out.write("                //    \"extend\":{\"depts\":[{\"deptId\":1,\"deptName\":\"开发部\"},\r\n");
      out.write("                //    {\"deptId\":2,\"deptName\":\"测试\"}]}}\r\n");
      out.write("            //    显示部门信息在下拉列表中\r\n");
      out.write("                $(\"#dept_add_select\").empty();\r\n");
      out.write("                $.each(result.extend.depts,function () {\r\n");
      out.write("\r\n");
      out.write("                    var optionEle = $(\"<option></option>\").append(this.deptName).attr(\"value\",this.deptId);\r\n");
      out.write("                    optionEle.appendTo(\"#dept_add_select\");\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    //校验表单数据方法\r\n");
      out.write("    function validate_add_form(){\r\n");
      out.write("    //    拿到校验数据\r\n");
      out.write("    //    校验用户名\r\n");
      out.write("        var empName = $(\"#empName_add_input\").val();\r\n");
      out.write("        var regName = /^[\\u4E00-\\u9FA5A-Za-z0-9_-]{2,16}$/;\r\n");
      out.write("        if(!regName.test(empName)){\r\n");
      out.write("            // alert(\"不符合用户名输入规则\")\r\n");
      out.write("\r\n");
      out.write("            // $(\"#empName_add_input\").parent().addClass(\"has-error\");\r\n");
      out.write("            // $(\"#empName_add_input\").next(\"span\").text(\"不符合用户名输入规则\");\r\n");
      out.write("            show_validate_msg(\"#empName_add_input\",\"error\",\"不符合用户名输入规则\")\r\n");
      out.write("            return false;\r\n");
      out.write("        }else {\r\n");
      out.write("            // $(\"#empName_add_input\").parent().addClass(\"has-success\");\r\n");
      out.write("            // $(\"#empName_add_input\").next(\"span\").text(\"符合用户名输入规则\");\r\n");
      out.write("            show_validate_msg(\"#empName_add_input\",\"success\",\"\")\r\n");
      out.write("        };\r\n");
      out.write("    //    校验邮箱\r\n");
      out.write("        var email = $(\"#email_add_input\").val();\r\n");
      out.write("        var regEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\r\n");
      out.write("        if (!regEmail.test(email)){\r\n");
      out.write("            // alert(\"不符合邮箱输入规则\")\r\n");
      out.write("            // $(\"#email_add_input\").parent().addClass(\"has-error\");\r\n");
      out.write("            // $(\"#email_add_input\").next(\"span\").text(\"不符合邮箱输入规则\");\r\n");
      out.write("            show_validate_msg(\"#email_add_input\",\"error\",\"不符合邮箱输入规则\")\r\n");
      out.write("            return false;\r\n");
      out.write("        }else {\r\n");
      out.write("            // $(\"#email_add_input\").parent().addClass(\"has-success\");\r\n");
      out.write("            // $(\"#email_add_input\").next(\"span\").text(\"符合邮箱输入规则\");\r\n");
      out.write("            show_validate_msg(\"#email_add_input\",\"success\",\"\")\r\n");
      out.write("        }\r\n");
      out.write("        return true;\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    //抽出校验方法\r\n");
      out.write("    function show_validate_msg(ele,status,msg){\r\n");
      out.write("    //    首先清除当前元素的状态信息，避免重复插入\r\n");
      out.write("        $(ele).parent().removeClass(\"has-success has-error\");\r\n");
      out.write("        $(ele).next(\"span\").text(\"\");\r\n");
      out.write("        if (status==\"success\"){\r\n");
      out.write("            $(ele).parent().addClass(\"has-success\");\r\n");
      out.write("            $(ele).next(\"span\").text(msg);\r\n");
      out.write("        }else if (status==\"error\") {\r\n");
      out.write("            $(ele).parent().addClass(\"has-error\");\r\n");
      out.write("            $(ele).next(\"span\").text(msg);\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    $(\"#emp_save_btn\").click(function () {\r\n");
      out.write("    //    1、将模态框内填写的数据提交给服务器进行保存\r\n");
      out.write("    //      a、保存前先进行数据校验\r\n");
      out.write("        if (!validate_add_form()){\r\n");
      out.write("            return false;\r\n");
      out.write("        } ;\r\n");
      out.write("    //    2、发生ajax请求保存员工\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/emp\",\r\n");
      out.write("            type:\"POST\",\r\n");
      out.write("            data:$(\"#empAddModal form\").serialize(),\r\n");
      out.write("            success:function (result) {\r\n");
      out.write("                // alert(result.msg);\r\n");
      out.write("            //    保存员工成功后\r\n");
      out.write("            //    1、关闭模态框\r\n");
      out.write("                $(\"#empAddModal\").modal('hide');\r\n");
      out.write("            //    2、来到最后一页显示数据\r\n");
      out.write("            //    发送ajax请求显示最后一页数据，分页会自动获取最大的页码\r\n");
      out.write("            //    将总记录条数当作页码，超过分页最大值会自动平衡调整\r\n");
      out.write("                to_page(totalRecore);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
